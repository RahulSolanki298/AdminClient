@model AdminClient.ViewModels.StudentModel

@{
    var schoolName = Model.SchoolName;
    var schoolId = Model.SchoolId ?? 0;
    if (schoolName == null)
    {
        schoolName = ViewBag.schoolName;
    }
    if (schoolId == 0)
    {
        schoolId = Convert.ToInt32(ViewBag.schoolId) ?? 0;
    }
}
@section styles{

    <style>
        /** {
                            box-sizing: border-box;
                        }*/

        body {
            background-color: #f1f1f1;
        }

        h1 {
            text-align: center;
        }

        input,select {
            padding: 10px;
            width: 100%;
            font-size: 17px;
            font-family: Raleway;
            border: 1px solid #aaaaaa;
        }

            /* Mark input boxes that gets an error on validation: */
            input.invalid {
                background-color: #ffdddd;
            }

        /* Hide all steps by default: */
        .tab {
            display: none;
        }

        button {
            background-color: #04AA6D;
            color: #ffffff;
            border: none;
            padding: 10px 20px;
            font-size: 17px;
            font-family: Raleway;
            cursor: pointer;
        }

            button:hover {
                opacity: 0.8;
            }

        #prevBtn {
            background-color: #bbbbbb;
        }

        /* Make circles that indicate the steps of the form: */
        .step {
            height: 15px;
            width: 15px;
            margin: 0 2px;
            background-color: #bbbbbb;
            border: none;
            border-radius: 50%;
            display: inline-block;
            opacity: 0.5;
        }

            .step.active {
                opacity: 1;
            }

            /* Mark the steps that are finished and valid: */
            .step.finish {
                background-color: #04AA6D;
            }
    </style>
}

    <form id="studentForm" action="/Student/SaveStudentData" method="post">
        <h1>Student Registration:</h1>
        <!-- One "tab" for each step in the form: -->
        <div class="tab">
            Student Details:
            <p><input type="hidden" name="SchoolId" value="@schoolId" /></p>
            <p><input type="text" name="SchoolName" oninput="this.className = ''" value="@schoolName" readonly /></p>
            <p><input name="FirstName" placeholder="FirstName" oninput="this.className = ''" value="@Model.FirstName" /></p>
            <p><input name="MiddleName" placeholder="MiddleName" oninput="this.className = ''" value="@Model.MiddleName" /></p>
            <p><input name="LastName" placeholder="LastName" oninput="this.className = ''" value="@Model.LastName" /></p>
            <p><input name="Mobile" placeholder="Mobile" oninput="this.className = ''" value="@Model.Mobile" /></p>
            <p><input name="Email" placeholder="Email" oninput="this.className = ''" value="@Model.Email" /></p>
            <p><input name="DateOfBirth" placeholder="DateOfBirth" oninput="this.className = ''" value="@Model.DateOfBirth" /></p>
            <p>
                <select name="ClassId">
                    @{
                    string selected = string.Empty;
                }
                @foreach (var cls in ViewBag.classDT)
                {
                    if (Model.ClassId == Convert.ToInt32(cls.classId))
                    {
                        selected = "selected";
                    }
                    else
                    {
                        selected = "";
                    }
                    <option value="@cls.classId" @selected>@cls.className</option>
                }
            </select>
        </p>
        <p>
            <select name="SchoolClassDivisionId">
                @{
                    string DivSelected = string.Empty;
                }
                @foreach (var divs in ViewBag.classDivisionDT)
                {
                    if (Model.SchoolClassDivisionId == Convert.ToInt32(divs.schoolClassDivisionId))
                    {
                        selected = "selected";
                    }
                    else
                    {
                        selected = "";
                    }
                    <option value="@divs.SchoolClassDivisionId" @DivSelected>@divs.division</option>
                }
            </select>
        </p>
    </div>
    <div class="tab">
        Father Details:
        <p><input name="FatherFirstName" placeholder="Father First Name" oninput="this.className = ''" value="@Model.FatherFirstName" /></p>
        <p><input name="FatherMiddleName" placeholder="Father Middle Name" oninput="this.className = ''" value="@Model.FatherMiddleName" /></p>
        <p><input name="FatherLastName" placeholder="Father Last Name" oninput="this.className = ''" value="@Model.FatherLastName" /></p>
        <p><input name="FatherMobile" placeholder="Father Mobile" oninput="this.className = ''" value="@Model.FatherMobile" /></p>
        <p><input name="FatherEmail" placeholder="FatherEmail" oninput="this.className = ''" value="@Model.FatherEmail" /></p>
    </div>
    <div class="tab">
        Mother Details:
        <p><input name="MotherFirstName" placeholder="Mother First Name" oninput="this.className = ''" value="@Model.MotherFirstName" /></p>
        <p><input name="MotherMiddleName" placeholder="Mother Middle Name" oninput="this.className = ''" value="@Model.MotherMiddleName" /></p>
        <p><input name="MotherLastName" placeholder="Mother Last Name" oninput="this.className = ''" value="@Model.MotherLastName" /></p>
        <p><input name="MotherMobile" placeholder="Mother Mobile" oninput="this.className = ''" value="@Model.MotherMobile" /></p>
        <p><input name="MotherEmail" placeholder="Mother Email" oninput="this.className = ''" value="@Model.MotherEmail" /></p>
    </div>
    <div class="tab">
        Guardian Details:
        <p><input name="GuardianFirstName" placeholder="Guardian First Name" oninput="this.className = ''" value="@Model.GuardianFirstName" /></p>
        <p><input name="GuardianMiddleName" placeholder="Guardian Middle Name" oninput="this.className = ''" value="@Model.GuardianMiddleName" /></p>
        <p><input name="GuardianLastName" placeholder="Guardian Last Name" oninput="this.className = ''" value="@Model.GuardianLastName" /></p>
        <p><input name="GuardianMobile" placeholder="Guardian Mobile" oninput="this.className = ''" value="@Model.GuardianMobile" /></p>
        <p><input name="GuardianEmail" placeholder="Guardian Email" oninput="this.className = ''" value="@Model.GuardianEmail" /></p>
    </div>
    <div style="overflow:auto;">
        <div style="float:right;">
            <a id="prevBtn" class="btn btn-success btn-sm" onclick="nextPrev(-1)">Previous</a>
            <a id="nextBtn" class="btn btn-primary btn-sm" onclick="nextPrev(1)">Next</a>
            <input type="submit" title="Submit" style="display:none;" />
        </div>
    </div>
    <div style="text-align:center;margin-top:40px;">
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
    </div>
</form>

@section scripts{
    @*action="/Student/SaveStudentData" method="post"*@
    <script>
        $(function () {

        });

        var currentTab = 0; // Current tab is set to be the first tab (0)
        showTab(currentTab); // Display the current tab

        function showTab(n) {
            // This function will display the specified tab of the form...
            var x = document.getElementsByClassName("tab");
            x[n].style.display = "block";
            //... and fix the Previous/Next buttons:
            if (n == 0) {
                document.getElementById("prevBtn").style.display = "none";
            } else {
                document.getElementById("prevBtn").style.display = "inline";
            }
            if (n == (x.length - 1)) {
                document.getElementById("nextBtn").innerHTML = "Submit";
            } else {
                document.getElementById("nextBtn").innerHTML = "Next";
            }
            //... and run a function that will display the correct step indicator:
            fixStepIndicator(n)
        }

        function nextPrev(n) {
            // This function will figure out which tab to display
            var x = document.getElementsByClassName("tab");
            // Exit the function if any field in the current tab is invalid:
            // if (n == 1 && !validateForm()) return false;
            // Hide the current tab:
            x[currentTab].style.display = "none";
            // Increase or decrease the current tab by 1:
            currentTab = currentTab + n;
            // if you have reached the end of the form...
            if (currentTab >= x.length) {
                // ... the form gets submitted:
                document.getElementById("studentForm").submit();
                return false;
            }
            // Otherwise, display the correct tab:
            showTab(currentTab);
        }

        function validateForm() {
            // This function deals with validation of the form fields
            var x, y, i, valid = true;
            x = document.getElementsByClassName("tab");
            y = x[currentTab].getElementsByTagName("input");
            // A loop that checks every input field in the current tab:
            for (i = 0; i < y.length; i++) {
                // If a field is empty...
                if (y[i].value == "") {
                    // add an "invalid" class to the field:
                    y[i].className += " invalid";
                    // and set the current valid status to false
                    valid = false;
                }
            }
            // If the valid status is true, mark the step as finished and valid:
            if (valid) {
                document.getElementsByClassName("step")[currentTab].className += " finish";
            }
            return valid; // return the valid status
        }

        function fixStepIndicator(n) {
            // This function removes the "active" class of all steps...
            var i, x = document.getElementsByClassName("step");
            for (i = 0; i < x.length; i++) {
                x[i].className = x[i].className.replace(" active", "");
            }
            //... and adds the "active" class on the current step:
            x[n].className += " active";
        }
    </script>

}